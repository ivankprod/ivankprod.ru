name: CI
on:
  push:
    branches:
      - main
      - master

jobs:
  server:
    name: Server
    strategy:
      matrix:
        go-version: [ '1.16' ]
        os: [ ubuntu-latest ]
    runs-on: ${{ matrix.os }}
    env:
      working-directory: ./src/server
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}

      - uses: actions/cache@v2
        with:
          # In order:
          # * Module download cache
          # * Build cache (Linux)
          # * Build cache (Mac)
          # * Build cache (Windows)
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
            ~/Library/Caches/go-build
            %LocalAppData%\go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Go Lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: latest
          working-directory: ${{ env.working-directory }}
          args: -v
          skip-pkg-cache: true
          skip-build-cache: true
          skip-go-installation: true

      - name: Go Test
        run: sudo go test -coverprofile=coverage.out -race -v ./...
        working-directory: ${{ env.working-directory }}

      - name: Push Go coverage
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ${{ env.working-directory }}/coverage.out
          verbose: true

  frontend:
    name: Frontend
    strategy:
      matrix:
        node-version: [ '16' ]
        os: [ ubuntu-latest ]
    runs-on: ${{ matrix.os }}
    env:
      working-directory: ./src/frontend
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - uses: actions/cache@v2
        id: cache
        with:
          path: ${{ env.working-directory }}/node_modules
          key: node-modules-${{ hashFiles('src/frontend/package-lock.json') }}

      - name: Install JS dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
        working-directory: ${{ env.working-directory }}

      - name: JS Lint
        run: npm run lint
        working-directory: ${{ env.working-directory }}

      - name: JS Test
        run: npm run test
        working-directory: ${{ env.working-directory }}

      - name: Push JS coverage
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ${{ env.working-directory }}/src/scripts/coverage/
          verbose: true
